if !has('nvim') | set viminfofile=$XDG_CACHE_DIR/vim/viminfo | endif

" General
set number
set mouse=
set nocursorline
set exrc
set t_te=

" Turn backup off
set nobackup
set nowb
set noswapfile

" Map leader to space
nnoremap <SPACE> <Nop>
let mapleader = " "

" Enable hidden buffers
set hidden

" Disable auto fixing end of line
" Useful when opening binary files
set nofixendofline

" Disable vim intro message
set shortmess=Iat

" Search
set hlsearch
set incsearch

" Pro tab
filetype plugin indent on
set tabstop=4
set shiftwidth=4

" Netrw customization
let g:netrw_banner = 0
let g:netrw_liststyle = 3

" Disable status
set laststatus=1
set nowrapscan

set lazyredraw
set ttyfast

" Plugins
source $XDG_CONFIG_HOME/vim/plugin/plugin.vim

" Keybindings
source $XDG_CONFIG_HOME/vim/keybindings/keybindings.vim

set packpath^=$XDG_DATA_HOME/vim

function! s:load_plugins(t) abort
	" Use XDG Paths for vim
	syntax on
	set synmaxcol=128
	" TODO compile hard constants somewhere based on OS
	set runtimepath^='$XDG_CONFIG_HOME/vim'
	set runtimepath+='$XDG_DATA_HOME/vim'
	set runtimepath+='$XDG_CONFIG_HOME/vim/after'

	let g:netrw_home = $XDG_DATA_HOME . "/vim"
	call mkdir($XDG_DATA_HOME . "/vim/spell", 'p')
	set viewdir=$XDG_DATA_HOME/vim/view | call mkdir(&viewdir, 'p')

	set backupdir=$XDG_CACHE_HOME/vim/backup | call mkdir(&backupdir, 'p')
	set directory=$XDG_CACHE_HOME/vim/swap   | call mkdir(&directory, 'p')
	set undodir=$XDG_CACHE_HOME/vim/undo     | call mkdir(&undodir,   'p')
	packadd vim-tmux-navigator
	packadd editorconfig-vim
	packadd vim-commentary
	packadd vim-surround
	packadd vim-ninja-feet
	packadd vim-fugitive
	packadd vim-better-whitespace
endfunction

augroup user_cmds
	autocmd!
	autocmd VimEnter * call timer_start(20, function('s:load_plugins'))
augroup END

if has("gui")
	source $XDG_CONFIG_HOME/vim/gvimrc
endif

if has("win32")
	set shell=cmd
	set shellquote=\" 
	" shellxquote must be a literal space character.
	set shellxquote=  
endif

set fillchars+=eob:\ 
