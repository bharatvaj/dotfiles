if !has('nvim') | set viminfofile=$XDG_CACHE_HOME/vim/viminfo | endif

" General
set number
set mouse=
set nocursorline
set exrc

" Disable auto fixing end of line
" Useful when opening binary files
set nofixendofline

" Disable vim intro message
set shortmess=I

" Search
set hlsearch
set incsearch

" Anti-tab
filetype plugin indent on
set tabstop=4
set shiftwidth=4
set expandtab

" Netrw customization
let g:netrw_banner = 0

" Visual Tweaks
hi VertSplit term=NONE cterm=NONE gui=NONE

"TODO use inverse colors from fg and bg instead of hardcoding black and white values
hi LineNr ctermbg=Black ctermfg=White

" Prominent Cursor Line
hi CursorLineNr ctermbg=White ctermfg=Black

" Disable status
set laststatus=1
set nowrapscan
set lazyredraw
set ttyfast

" Plugins
source $XDG_CONFIG_HOME/vim/plugin/plugin.vim

" Keybindings
source $XDG_CONFIG_HOME/vim/keybindings/keybindings.vim

function! s:load_plugins(t) abort
	" Use XDG Paths for vim
	set packpath^=$XDG_DATA_HOME/vim
	syntax on
	set synmaxcol=128
	" TODO compile hard constants somewhere based on OS
	set runtimepath^='$XDG_CONFIG_HOME/vim'
	set runtimepath+='$XDG_DATA_HOME/vim'
	set runtimepath+='$XDG_CONFIG_HOME/vim/after'


	let g:netrw_home = $XDG_DATA_HOME . "/vim"
	" call mkdir($XDG_DATA_HOME . "/vim/spell", 'p')
	" set viewdir=$XDG_DATA_HOME/vim/view | call mkdir(&viewdir, 'p')

	" set backupdir=$XDG_CACHE_HOME/vim/backup | call mkdir(&backupdir, 'p')
	" set directory=$XDG_CACHE_HOME/vim/swap   | call mkdir(&directory, 'p')
	" set undodir=$XDG_CACHE_HOME/vim/undo     | call mkdir(&undodir,   'p')
	packadd vim-surround
endfunction

augroup user_cmds
	autocmd!
	autocmd VimEnter * call timer_start(20, function('s:load_plugins'))
augroup END

if has("win32")
	if executable("pwsh")
		set shell=pwsh
		set shellcmdflag=-ExecutionPolicy\ RemoteSigned\ -Command
		set shellquote=\" 
		" shellxquote must be a literal space character.
		set shellxquote=  
	endif
endif

set path+=**
