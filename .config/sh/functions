md() {
	mkdir "$@" && cd "$@"
}

open_project() {
	# search only dirs
	search_dir=${1:-.}
	for i in $search_dir/*/; do
		if [ -d "$i/.git" ]; then
			echo "$i"
		else
			# if does not have .git, search the subdirs
			open_project "$i"
		fi
	done
}

attach() {
	if there abduco && [ $# -eq 0 ]; then
		sesh_name=$(abduco -l | tail -n +2 | cut -f3 | $FUZZER)
		test -z "$sesh_name" && return
		abduco -a $sesh_name || abduco -c $sesh_name mtm;
	fi
	[ $# -gt 0 ] && abduco -a $1
}

# TODO make it non-interruptable
insult() {
	if there sl; then
		sl else printf "You are a noob for typing '$1'\n"
		sleep 5
	fi
}

smartmake() {
    if there fmake && there errorformat; then
        $(fmake) $* | errorformat
    else
        make
    fi
}

thwart() {
    alias $1="insult '$1'"
}

quickopen() {
	if ! there "${FUZZER}"; then
		printf '${FUZZER} not available\n'
		return
	fi

	# TODO maybe add -type in the future TODO add $name
	#if [ $# -gt 0 ]; then
	#	name="-name $@"
	#fi
	# 2>/dev/null
	if [ -d .git ]; then
		optional_files="$(git ls-files) |"
		somethin="$(git ls-files | ${FUZZER})"
	else
		maxdepth=${1:-3} somethin="$(find .  -maxdepth $maxdepth | ${FUZZER})"
	fi
	if [ -z "$somethin" ]; then
		return;
	elif [ -f "$somethin" ]; then
		$EDITOR "$somethin"
	elif [ -d "$somethin" ]; then
		cd "$somethin"
	else
		printf '%s: is neither a file nor a directory\n' "$somethin"
		return
	fi
}

cd_and_ls() {
	cd $* && ls
}

download() {
	# TODO use wget if curl not available
	curl -fLO $*
}

find_() {
	find . -name "*$**"
}

vim_plug() { export
	VIM_PLUGINS_DIR="$XDG_DATA_HOME"/vim/pack/voom/opt export
	VIM_DIR="$XDG_DATA_HOME"/vim voom $@
}

nvim_plug() {
    export VIM_PLUGINS_DIR="$XDG_DATA_HOME"/nvim/pack/voom/opt
    export VIM_DIR="$XDG_DATA_HOME"/nvim voom $@
}
